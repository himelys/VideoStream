#: import FadeTransition kivy.uix.screenmanager.FadeTransition

ScreenManagement:
	transition: FadeTransition()
	MainScreen:
	SettingScreen:
	PostProcessScreen:

<MainScreen>:
	name: "main"
	# col: 2
    FloatLayout:
        size: root.size
        pos: root.pos
        canvas:
            Color:
                rgb: (0, 0, 0)
            Rectangle:
                pos: root.pos
                size: root.size
	    CameraControl


<CameraControl>:
	orientation: 'vertical'
	canvas:
		Color:
			rgb: (1, 1, 1)
		Rectangle:
			texture: self.texture
			size: self.width - 100, self.height - 300
			pos: self.x + 50, self.y + 250

    BoxLayout:
		pos: root.pos[0], root.pos[1] + 150
		padding: 10,10,10,0
		spacing: 10
		size_hint: 1, 0.5
		orientation: 'horizontal'
        width: root.size[0]

        Button:
            text: 'Preview'
            # size_hint: None, 0.2
            # width: root.size[0]/7
			# height: '1dp'
            on_press:
				root.Preview()
        ToggleButton:
            id: toggle1
            text: 'Record'
            background_color: (1,0,0,1) if self.state == 'normal' else (0,1,0,1)
            # size_hint: None, 0.2
            # width: root.size[0]/7
			# height: '1dp'
            on_press: root.Record()
        Button:
            text: 'Stop Record'
            # background_color: 0,1,255,0.7
            # size_hint: None, 0.2
            # width: root.size[0]/7
			# height: '1dp'
            on_press: root.Stop_record()
            on_release: toggle1.state = 'normal'
        Button:
            text: 'Apply'
            # background_color: 0,1,255,0.7
            # size_hint: None, 0.2
            # width: root.size[0]/7
			# height: '1dp'
    		on_release:
				root.Update_Param()
				root.slidervalue()
        Button:
            text: 'Setting'
            # background_color: 0,1,255,0.7
            # size_hint: None, 0.2
            # width: root.size[0]/7
			# height: '1dp'
    		on_release: app.root.current = "Setting"
    	Button:
            text: 'DB'
            # background_color: 0,1,255,0.7
            # size_hint: None, 0.2
            # width: root.size[0]/7
			# height: '1dp'
    		on_release: app.root.current = "Post Process"
    	Button:
            text: 'Quit'
            # background_color: 0,1,255,0.7
            # size_hint: None, 0.2
            # width: root.size[0]/7
			# height: '1dp'
    		on_release: root.Quit()

	BoxLayout:
		padding: 10,10,10,10
		spacing: 10
		size_hint: 1, 0.5
		orientation: 'horizontal'
        width: root.size[0]

		canvas:
			Color:
				rgb: (0,0,0)
            Rectangle:
				size: root.size[0], root.size[1]*0.1

		BoxLayout:
			# size_hint: None, 0.2
			orientation: 'vertical'
			width: root.size[0]/10
			height: root.size[1]/5

			Label:
				text: 'Target FPS: ' + root.target_fps
				halign: 'left'
				valign: 'center'
			Label:
				text: 'Current FPS: ' + root.current_fps
				halign: 'left'
				valign: 'center'

		BoxLayout:

			spacing: 10
			orientation: 'horizontal'
			width: root.size[0]*0.9
			height: root.size[1]/5
			Label:
				color: 1, 1, 1, 1
				text: 'FPS: ' + str(fps_slider.value)
				halign: 'center'
				valign: 'middle'

			Slider:
				id: fps_slider
				min: 1
				max: 60
				step: 1
				value: 30
				on_value:
					root.TargetFPS_Value(*args)

			Label:
				color: 1, 1, 1, 1
				text: 'C ' + str(contrast_slider.value)
			Slider:
				id: contrast_slider
				min: -64
				max: 64
				step: 1
				value: 0
				on_value:
					# app.Contrast = self.value
					root.Contrast_value(*args)
			Label:
				color: 1, 1, 1, 1
				text: 'B ' + str(brightness_slider.value)
			Slider:
				id: brightness_slider
				min: -127
				max: 127
				step: 1
				value: 0
				on_value:
					root.Brightness_value(*args)
# <RecFPSPopup>:
#     fps_value: slider_id.value
#     size_hint: (.5, .3)
#     pos_hint: {'center_x': .5, 'center_y': 0.5}
#     title: "  FPS: " + str(slider_id.value)
#     Slider:
#         min: 0
#         max: 50
#         value:31
#         step: 1
#         id: slider_id

<SettingScreen>:
    name: "Setting"
    FloatLayout:
        size: root.size
        pos: root.pos
        canvas:
            Color:
                rgb: (0, 0, 0)
            Rectangle:
                pos: root.pos
                size: root.size
	    RecSetting

<RecSetting>:
	# fps: fps_slider.value
    BoxLayout:
		orientation: 'horizontal'
        size_hint: 1, None
        width: root.size[0]
        height: root.size[1]
		# Label:
        #     color: 1, 1, 1, 1
        #     font_size: 20
        #     text: 'FPS: ' + str(fps_slider.value)
        #     # size: self.texture_size
		# Slider:
		# 	id: fps_slider
		# 	min: 1
		# 	max: 60
		# 	step: 1
		# 	value: 30
		# 	on_value:
		# 		# root.Set_FPS(self.value)
		# 		app.Cam_fps = self.value
		# 		# root.ids.lbl1.text = 'SharedVar is ' + str(app.Cam_fps)
        Button:
            text: 'To Preview'
            size_hint: None, 0.2
            width: root.size[0]/5
			on_release:
				app.root.current = "main"
    	# Button:
        #     text: 'Next Screen'
        #     background_color: 0,1,255,0.7
        #     size_hint: None, 0.2
        #     width: root.size[0]/5
    	# 	on_release: app.root.current = "other"

<PostProcessScreen>:
    name: "Post Process"
    FloatLayout:
        size: root.size
        pos: root.pos
        canvas:
            Color:
                rgb: (0, 0, 0)
            Rectangle:
                pos: root.pos
                size: root.size
	    PostProcess

<PostProcess>:
	BoxLayout:
        BoxLayout:
            size_hint: 1, None
            width: root.size[0]
            height: root.size[1]

            Button:
                text: 'To Preview'
                size_hint: None, 0.2
                width: root.size[0]/5
    			on_release: app.root.current = "main"
        	# Button:
            #     text: 'Next Screen'
            #     background_color: 0,1,255,0.7
            #     size_hint: None, 0.2
            #     width: root.size[0]/5
        	# 	on_release: app.root.current = "other"
