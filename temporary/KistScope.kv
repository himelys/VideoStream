#:kivy 1.9.0

KistScope:

<KistScope>:
    # params_layout: params_layout
    scope_window: scope_window
    preview_record: preview_record
    # descriptions: descriptions
    FloatLayout:
        size: root.size
        pos: root.pos
        canvas:
            Color:
                rgb: (0.1, 0.1, 0.1)
            Rectangle:
                pos: self.pos
                size: self.size
        size_hint: (1., 1.)
        ScopePreviewRecordLayout:
            id: preview_record
            pos: root.pos[0] + root.width*.02, root.pos[1] + root.height*.032
            size: (root.size[0]/2 - root.size[0]*.04, root.size[1]/8)
        # ScopeParamsLayout:
        #     id: params_layout
        #     pos: root.pos[0] + root.width*.02 + root.width/2, root.pos[1] + root.height*.032
        #     size: (root.size[0]/2. - root.size[0]*.04, root.size[1] - root.size[1]*.064)
        # VariableDescriptions:
        #     id: descriptions
        #     pos: root.pos[0] + root.width*.93, root.pos[1] + root.height*.89
        #     size: (root.size[0]/17, root.size[0]/17)
        FloatLayout:
            id: scope_window
            pos: root.pos[0] + root.width*.02, root.pos[1] + root.height*.032 + root.height/8
            size: (root.size[0]/2 - root.size[0]*.04, root.size[1] - root.size[1]*.064 - root.height/8)
            # on_size:
            #     root.adjust_particle_system_position(self.pos[0] + self.width *.5, self.pos[1] + self.height *.5)
            canvas:
                Color:
                    rgb: (0., 0., 0.)
                Rectangle:
                    pos: self.pos
                    size: self.size
            # DebugPanel:
            #     size_hint: (.3, .1)
            #     pos: (root.pos[0]+root.size[0]*.34, root.pos[1]+root.height*.89)
            # WorkingFile:
            #     size_hint: (.7, .1)
            #     pos: (root.pos[0] + root.width*.02, root.pos[1]+root.height*.89)
            #     # filename: root.active_filename


<ScopePreviewRecordLayout>:
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: 'horizontal'
        spacing: 4
        padding: 10
        Button:
            id: saveasbutton
            size_hint: (.3,1)
            on_press: root.Preview()
            # on_state: root.show_save_popup() if (self.state == 'down') else None
            BoxLayout:
                pos: saveasbutton.pos
                size: saveasbutton.size
                orientation: 'horizontal'
                padding: 5
                spacing: 5
                # Image:
                #     source: "media/icons/5_content_save_as.png"
                #     size_hint: (.4, 1.)
                Label:
                    text: 'Save As'
                    size_hint: (.6, 1.)
                    font_size: root.size[0]*.03
                    text_size: self.size
                    halign: 'left'
                    valign: 'middle'
        Button:
            id: savebutton
            size_hint: (.3,1)
            # on_state: root.save_pressed() if (self.state == 'down') else None
            BoxLayout:
                pos: savebutton.pos
                size: savebutton.size
                orientation: 'horizontal'
                padding: 5
                spacing: 5
                # Image:
                #     source: "media/icons/5_content_save.png"
                #     size_hint: (.4, 1.)
                Label:
                    text: 'Save'
                    size_hint: (.6, 1.)
                    font_size: root.size[0]*.03
                    text_size: self.size
                    halign: 'left'
                    valign: 'middle'
        Button:
            id: loadbutton
            size_hint: (.3,1)
            font_size: root.size[0]*.04
            halign: 'center'
            valign: 'middle'
            # on_state: root.show_load_popup() if (self.state == 'down') else None
            BoxLayout:
                pos: loadbutton.pos
                size: loadbutton.size
                orientation: 'horizontal'
                padding: 5
                # Image:
                #     source: "media/icons/4_collections_collection.png"
                #     size_hint: (.5, 1.)
                Label:
                    text: 'Load'
                    size_hint: (.5, 1.)
                    font_size: root.size[0]*.03
                    text_size: self.size
                    halign: 'left'
                    valign: 'middle'

        # Button:
        #     id: previewbutton
        #     size_hint: 0.3,1
        #     text: 'Preview'
        #     # on_press: root.Preview()
        # ToggleButton:
        #     id: toggle1
        #     text: 'Record'
        #     background_color: (1,0,0,1) if self.state == 'normal' else (0,1,0,1)
        #     size_hint: None, 0.2
        #     width: 200
        #     # on_press: root.Record()
        # Button:
        #     text: 'Stop Record'
        #     background_color: 0,1,255,0.7
        #     size_hint: None, 0.2
        #     width: 200
        #     # on_press: root.stop_record()
        #     # on_release: toggle1.state = 'normal'

# <DebugPanel>:
#     fps: root.fps
#     Label:
#         pos: root.pos
#         size: root.size
#         font_size: root.size[1]*.28
#         halign: 'center'
#         valign: 'middle'
#         color: (1,1,1,1)
#         text: 'FPS: ' + root.fps if root.fps != None else 'FPS:'
#
#
# <WorkingFile>:
#     Label:
#         pos: root.pos
#         size: root.size
#         font_size: root.size[1]*.28
#         halign: 'left'
#         valign: 'middle'
#         text_size: self.size
#         text: '   ' + root.filename if root.filename != None else ""
#
# <VariableDescriptions>:
#     BoxLayout:
#         pos: root.pos
#         size: root.size
#         Image:
#             center: root.center
#             source: "media/icons/2_action_help.png"
#             size_hint: (.9, .9)
#             color: (.19921875, .70703125, .89453125, 1.)
#             # on_touch_down: self.collide_point(*args[1].pos) and root.tab_info()

# <GetNewFileNameLayout>:
#     fname_input: fname_input
#
#     BoxLayout:
#         size_hint: (1., 1.)
#         margin: 10
#         spacing: 10
#         orientation: 'vertical'
#         pos: (root.pos[0],root.pos[1]+root.size[1]*.68)
#         size: root.size
#
#         TextInput:
#             id: fname_input
#             multiline: False
#             text: ''
#             size_hint_y: None
#             font_size: self.height * .5
#             height: 50
#             focus: True
#
#         BoxLayout:
#             orientation: 'horizontal'
#             margin: 10
#             spacing: 10
#             size_hint_y: None
#             height: 50
#             Widget:
#                 size_hint_x: .15
#             Button:
#                 size_hint_x: .35
#                 text: 'Cancel'
#                 font_size: self.size[1] * .35
#                 on_release: root.cancel()
#             Button:
#                 size_hint_x: .35
#                 text: 'OK'
#                 font_size: self.size[1] * .35
#                 on_release: root.ok()
#             Widget:
#                 size_hint_x: .15
#
# [FilenameButton@BoxLayout]
#     thisisabutton: True
#     orientation: 'horizontal'
#     size_hint_x: 1
#     size_hint_y: None
#     height: ctx.height
#     Image:
#         source: ctx.icon
#         size_hint_x: None
#         size_hint_y: 1.
#         width: self.height
#         on_touch_down: self.collide_point(*args[1].pos) and ctx.callback(ctx.text)
#     Widget:
#         # spacer
#         size_hint_x: None
#         width: 10
#     Label:
#         size_hint_x: None
#         text: ctx.text
#         valign: 'middle'
#         halign: 'left'
#         font_size: self.height * .46
#         on_texture_size: self.size = args[1]
#         on_touch_down: self.collide_point(*args[1].pos) and ctx.callback(self.text)
#
# <ScopeParamsLayout>:
#     particle_tabs: particle_tabs
#     BoxLayout:
#         pos: root.pos
#         size: root.size
#         TabbedPanel:
#             id: particle_tabs
#             pos: root.pos
#             size: root.size
#             tab_width: root.size[0]*.3
#             tab_height: root.size[1]*.08
#             # default_tab_content: root.get_default_tab()
#             default_tab_text: 'Hello'


# <KivyCamera>:
#
#     # canvas:
#     #     Color:
#     #         rgb: (1, 1, 1)
#     #     Rectangle:
#     #         pos: self.pos
#     #         texture: self.texture
#     #         size: self.width, self.height
#     #         pos: self.x , self.y
#
#
#     BoxLayout:
#         # orientation: "vertical"
#         # size_hint: 1, None
#         # height: 20
#         BoxLayout:
#             size_hint: 1, None
#             width: self.width
#             height: 200
#             # height: dp(50)
#             # padding: 20
#             Button:
#                 text: 'Preview'
#                 size_hint: None, 0.2
#                 width: 200
#                 on_press: root.Preview()
#             ToggleButton:
#                 id: toggle1
#                 text: 'Record'
#                 background_color: (1,0,0,1) if self.state == 'normal' else (0,1,0,1)
#                 size_hint: None, 0.2
#                 width: 200
#                 on_press: root.Record()
#             Button:
#                 text: 'Stop Record'
#                 background_color: 0,1,255,0.7
#                 size_hint: None, 0.2
#                 width: 200
#                 on_press: root.stop_record()
#                 on_release: toggle1.state = 'normal'
